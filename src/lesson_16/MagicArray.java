package lesson_16;

public class MagicArray {
    int[] array;
    int cursor;

    public MagicArray() {
        array = new int[10];
    }

    // 1. Добавление а массив одного элемента
    void add(int value) {
        // Проверка.Ест ли вообще свободное место во внутреннем масиве,
        // если места нет, то нужно добавить
        if (cursor == array.length - 1) {
            //Расширить массив перед добавлением нового элемента массива
            expandArray();
        }
        array[cursor] = value;
        cursor++;
    }

    //4. Добовляеи в массив сразу несколько значений
    void add(int... numbers) {
        // c numbers  я могу обращаться как со ссылкой на массив int
        //System.out.println("Приняли несколько интов в количестве: " + numbers.length);
        // System.out.println("Есть индекс у каждого инта, как в массиве. По индексом 0: " + numbers[0]);
        for (int i = 0; i < numbers.length; i++) {
            add(numbers[i]);
        }

    }

    // 2. Динамическое изменение размера массива
    void expandArray() {
        System.out.println("Расширяем массив! Курсор: " + cursor);
        /*
        Plan
        -создать новый массив большего размера(в 2 раза больше)
        -переписать в новый массив все значения старого (до курсора)
        -перебросить ссылку
         */

        //-создать новый массив большего размера
        int[] newArray = new int[array.length * 2];

        //переписать в новый массив все значения старого (до курсора)
        for (int i = 0; i < cursor; i++) {
            newArray[i] = array[i];//Переписываю все занчения из старого массива в новый
        }

        //-перебросить ссылку
        array = newArray;//Переменная array хранит ссылку на "новый" массив
        System.out.println("Расширение массива завершено");
    }

    //3. Метод,который будет возвращать строковое представление массива
    //[1, 14, 16] => exsample
    public String toString() {

        if (cursor == 0) return "[]";

        String result = "[";
        for (int i = 0; i < cursor; i++) {
            result = result + array[i] + (i < cursor - 1 ? ", " : " ]");
        }
        return result;

    }

    //5.Текущее количество элементов в массиве
    int size() {
        return cursor;
    }

    //6. Возвращает значение по индексу
    int get(int index) {
        if (index >= 0 && index < cursor) {
            return array[index];
        }
        //Написать код если индекс "не корректный"
        return Integer.MIN_VALUE;
        //todo поправить обработку не корректного индекса
    }

    // 7. Удаляет элемент по индексу (Есть индекс - удалить это значение в массиве)
    //todo сделать
    int remove(int index) {
        /*

         */
        return -1;

    }

}

/*
1.Добавлять в массив элемент, не думая об индесах, размере массива
2. Динамическое изменение размера массива
3. Метод,который будет возвращать строковое представление массива
4. Добовляеи в массив сразу несколько значений
5. Текущее количество элементов в массиве
6. Возвращает значение по индексу
7. Удаляет элемент по индексу (Есть индекс - удалить это значение в массиве)
 */

